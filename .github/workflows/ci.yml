name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.packages.outputs.packages }}
    steps:
    - uses: actions/checkout@v4
    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Get package list
      id: packages
      run: |
        packages=$(nix eval --impure --json --expr '
          let
            overlay = import ./overlay.nix;
            attrNames = builtins.attrNames (overlay {} {});
          in
            attrNames
        ')
        echo "packages=$packages" >> $GITHUB_OUTPUT

  build:
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix:
        system:
          - x86_64-linux
          - aarch64-darwin
        package: ${{ fromJson(needs.generate-matrix.outputs.packages) }}
        include:
          - system: x86_64-linux
            os: ubuntu-latest
          - system: aarch64-darwin
            os: macos-latest
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: siraben
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
    
    - name: Build ${{ matrix.package }}
      run: |
        echo "Building ${{ matrix.package }} for ${{ matrix.system }}..."
        nix build .#${{ matrix.package }} --print-build-logs
    
    - name: Push to Cachix
      run: |
        nix build .#${{ matrix.package }} | cachix push siraben

  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check flake
      run: nix flake check --no-build